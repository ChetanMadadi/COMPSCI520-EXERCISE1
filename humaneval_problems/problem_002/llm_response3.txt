from typing import List, Tuple

def find_closest_elements(numbers: List[float]) -> Tuple[float, float]:
    sorted_numbers = sorted(numbers)
    n = len(sorted_numbers)
    
    # Initialize with the difference and pair from the first two elements
    min_diff = sorted_numbers[1] - sorted_numbers[0]
    closest_pair = (sorted_numbers[0], sorted_numbers[1])
    
    # Iterate through adjacent pairs starting from the second pair (index 1 and 2)
    # i represents the index of the second element in the pair (the larger one)
    for i in range(2, n):
        # Calculate the difference between the current adjacent elements
        current_diff = sorted_numbers[i] - sorted_numbers[i-1]
        
        # If the current difference is smaller, update the minimum difference and the closest pair
        if current_diff < min_diff:
            min_diff = current_diff
            closest_pair = (sorted_numbers[i-1], sorted_numbers[i])
            
    return closest_pair